version: 2
jobs:
  debs:
    docker:
      - image: perl:latest
        environment:
          PERL5LIB: "."

    steps:
      - checkout
      - run: apt-get update
      - run: apt-get -y install build-essential
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run: cpanm --notest REHSACK/List-MoreUtils-XS-0.425_001.tar.gz
      - run: cpanm --installdeps --notest .
      - save_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
          paths:
            - "/usr/local/lib/perl5/site_perl"

  basics:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."
        - MYSQL_HOME: "/root/project/.circleci"
      - image: circleci/mysql:latest
    parallelism: 2

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client
      - run:
          name: Wait for database
          command: |
            while ! echo -n > /dev/tcp/127.0.0.1/3306; do
              sleep 1
              echo -n .
            done
      - run:
          name: Create database(s)
          command: |
            mysql -e "create database seccubus"
            mysql -e "create database seccubus_create"
            mysql -e "create database seccubus_upgrade"
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run:
          name: Unit test
          command: circleci test glob t/[02]* | xargs -n 1 prove

  mojo:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."
        - MYSQL_HOME: "/root/project/.circleci"
      - image: circleci/mysql:latest

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client
      - run:
          name: Wait for database
          command: |
            while ! echo -n > /dev/tcp/127.0.0.1/3306; do
              sleep 1
              echo -n .
            done
      - run:
          name: Create database(s)
          command: |
            mysql -e "create database seccubus"
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run:
          name: Unit test
          command: prove t/[568]*

  ssllabs:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."
        - MYSQL_HOME: "/root/project/.circleci"
      - image: circleci/mysql:latest

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client
      - run:
          name: Wait for database
          command: |
            while ! echo -n > /dev/tcp/127.0.0.1/3306; do
              sleep 1
              echo -n .
            done
      - run:
          name: Create database(s)
          command: |
            mysql -e "create database seccubus"
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run:
          name: Unit test
          command: prove t/90*

  testssl:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."
        - MYSQL_HOME: "/root/project/.circleci"
      - image: circleci/mysql:latest

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client
      - run:
          name: Wait for database
          command: |
            while ! echo -n > /dev/tcp/127.0.0.1/3306; do
              sleep 1
              echo -n .
            done
      - run:
          name: Create database(s)
          command: |
            mysql -e "create database seccubus"
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run:
          name: Unit test
          command: prove t/91*

  build:
    docker:
      - image: perl:latest
        environment:
        - PERL5LIB: "."

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential zip dnsutils bsdmainutils mysql-client default-jre
      - restore_cache:
          key: cpanm-{{ .Branch }}-{{ checksum "Makefile.PL" }}
      - run:
          name: Build
          command: ./build_all
      - store_artifacts:
          path: /root/project/build/Seccubus*.tar.gz

  build_deb:
    docker:
      - image: debian:9
        environment:
        - PERL5LIB: "."

    steps:
      - checkout
      - run:
          name: Install prerequisite packages
          command: apt-get update; apt-get -y install build-essential debhelper default-jre git
      - run:
          name: Build
          command: deb/makedeb.sh
      - save_cache:
          key: deb-{{ .Branch }}
          paths:
            - "/root/project/build"
      - store_artifacts:
          path: /root/project/build

  check_deb_debian9:
    docker:
      - image: debian:9

    steps:
      - run: apt-get update; apt-get install -y ca-certificates
      - restore_cache:
          key: deb-{{ .Branch }}
      - run:
          name: Install package (shoud fail)
          command: dpkg -i /root/project/build/*.deb; if [ $? == 0 ] ; then echo "NOT ok"; exit 99; else echo "OK" ; fi
      - run:
          name: Install failed packages (shoud work)
          command: apt-get install -f -y
      - run:
          name: Seccubus should be running on port 8443
          command: echo -n >/proc/tcp/localhost/8443

workflows:

  version: 2

  unit_and_integration_tests:
    jobs:
      - debs
      - basics:
          requires:
            - debs
      - mojo:
          requires:
            - debs
      - ssllabs:
          requires:
            - debs
      - testssl:
          requires:
            - debs
      - build:
          requires:
            - debs

  debian_package_building:
    jobs:
      - build_deb
      - check_deb_debian9:
          requires:
            - build_deb
